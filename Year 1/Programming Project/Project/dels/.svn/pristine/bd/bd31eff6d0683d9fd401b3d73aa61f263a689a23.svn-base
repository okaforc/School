class Screen {
  color backgroundColor;
  ArrayList widgetList = new ArrayList<Widget>();
  ArrayList checkBoxList = new ArrayList<CheckBox>();
  SearchBar searchBar;
  int xpos = 300;

  Screen(color backgroundColor) {
    this.backgroundColor = backgroundColor;
  }

  void addWidget(int x, int y, int width, int height, String label, color widgetColor, color labelColor, PFont widgetFont, int event) {
    widgetList.add(new Widget(x, y, width, height, label, widgetColor, labelColor, widgetFont, event));
  }

  //void addRadio(int x, int y, int width, int height, String label, color widgetColor, PFont widgetFont, int event) {
  //  widgetList.add(new Radio(x, y, width, height, label, widgetColor, widgetFont, event));
  //}

  void addCheckBox(int x, int y, int width, int height, String label, color widgetColor, color labelColor, PFont widgetFont, int event) {
    Widget item = new CheckBox(x, y, width, height, label, widgetColor, labelColor, widgetFont, event);
    widgetList.add(item);
    checkBoxList.add(item);
  }

  void createSearchBar(int x, int y, int width, int height, String label, color widgetColor, color labelColor, PFont widgetFont, int event) {
    searchBar = new SearchBar(x, y, width, height, label, widgetColor, labelColor, widgetFont, event);
  }

  int getEvent(int mX, int mY) {
    for (int i = 0; i < widgetList.size(); i++) {
      Widget aWidget = (Widget) widgetList.get(i);
      if (mX > aWidget.x && mX < aWidget.x + aWidget.width && mY > aWidget.y && mY < aWidget.y + aWidget.height) {
        return aWidget.event;
      }
    }
    return EVENT_NULL;
  }

  void checkBoxes(int mX, int mY) {
    for (int i = 0; i < checkBoxList.size(); i++) {
      CheckBox aBox = (CheckBox) checkBoxList.get(i);
      if (mX > aBox.x && mX < aBox.x + aBox.width && mY > aBox.y && mY < aBox.y + aBox.height) {
        aBox.changeStatus();
        aBox.checkTheBox();
      }
    }
  }

  void drawWidgets() {
    stroke(BLACK);
    for (int i = 0; i<widgetList.size(); i++) {
      Widget aWidget = (Widget) widgetList.get(i);
      if (aWidget.getBorderIsWhite()) {
        stroke(WHITE);
      } else {
        stroke(BLACK);
      }
      aWidget.drawTheWidget();
    }
    if (searchBar != null) {
      if (searchBar.getBorderIsWhite()) {
        stroke(WHITE);
      } else {
        stroke(BLACK);
      }
      searchBar.drawTheWidget();
    }
  }

  void updatingSlider(int mX, int mY) {
    if (mY >= 390 && mY <= 410) xpos = mX;
  }

  void drawSlider() {
    strokeWeight(10); 
    stroke(BLACK);
    line(0, 400, 600, 400);
    text(0, 20, 380);
    text(100, 570, 380);
    fill(0, 100, 200);
    noStroke();
    rect(xpos, 390, 20, 20);
    int chosenVal = xpos/6;
    if (xpos <= 0) xpos = 0;
    if (xpos >= 600) xpos = 600;
    if (chosenVal <= 0) chosenVal = 0;
    if (chosenVal >= 100) chosenVal = 100;
    fill(BLACK);
    text("chosenValue: " + chosenVal, 240, 500 );
  }
  void moveScreenY() {
    if (currentScreen == screen0 || currentScreen == screen42) {
      centerY = 0;
    }else{
      centerY = (mouseY-offsetY)*-1;
    }
  }
  void moveScreenX() {
    if (currentScreen == screen0 || currentScreen == screen42) {
      centerX = 0;
    }else{
      centerX = (mouseX-offsetX)*-1;
    }
  }
}
