public class Country {
    ArrayList<State> states;
    String name;
    public Country(String name, ArrayList<State> states) {
        this.name = name;
        this.states = states;
    }

    public Country(String name) {
        this.name = name;
        states = new ArrayList<State>();
    }

    // Add a state to the ArrayList of states
    void addState(State c) {
        states.add(c);
    }

    // Add a state to the ArrayList of states given a name
    void addState(String c) {
        states.add(new State(c));
    }

    // Return a state from the ArrayList of states given a name
    public State getState(String name) {
        try {
            if (name != null && states != null) {
                for (State s : states) {
                    if (name.equalsIgnoreCase(s.getName())) {
                        return s;
                    }
                }
            }
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    // Return a state from the ArrayList of states given an index
    public State getState(int index) {
        if (index >= 0 && states != null) {
            try {
                State s = states.get(index);
                if (s != null) {
                    return states.get(index);
                }
            } 
            catch(Exception e) {
                e.printStackTrace();
            }
        }
        return null;
    }

    // Return an area from a state in the ArrayList of states given a name
    public Area getArea(String name) {
        for (State st : states) {
            for (Area a : st.getAreas()) {
                if (name.equalsIgnoreCase(a.getName())) {
                    return a;
                }
            }
        }
        return null;
    }

    // Return an ArrayList of areas from each state
    public ArrayList<Area> getAreas() {
        ArrayList<Area> tAreas = new ArrayList<Area>();
        for (State st : states) {
            for (Area a : st.getAreas()) {
                tAreas.add(a);
            }
        }
        return tAreas;
    }

    // Return the total amount of cses from each area in each state
    public int getCases() {
        int totalCases = 0;
        for (State st : states) {
            totalCases = 0;
            for (Area a : st.getAreas()) {
                totalCases += a.getCases();
            }
        }
        return totalCases;
    }

    // Return the ArrayList of states
    public ArrayList<State> getStates() {
        return states;
    }   

    // Return the name of the country
    public String getName() {
        return name;
    }
    
    public boolean containsState(String name) {
    for (State s : states) {
      if (s.getName().equalsIgnoreCase(name)) {
        return true;
      }
    }
    return false;
  }
}
