THEORY LProduct

IMPORT-THEORY Equality
IMPORT-THEORY Arithmetic
IMPORT-THEORY List
IMPORT-HASKELL List

THEOREM prod_mul
    product (xs++ys)   ==   product xs * product ys

STRATEGY Induction xs :: List

    BASE []
        product ([]++ys)   ==   product [] * product ys

    STRATEGY ReduceBoth
        LHS
        product([]++ys)
            = DEF ++.1
        product ys

        RHS
        product [] * product ys
            = DEF product.1
        1 * product ys
            = LAW mul_left_unit l2r
        product ys

    QED BASE

    STEP (x:xs)

    ASSUME
      product (xs++ys)   ==   product xs * product ys

    SHOW
      product ((x:xs)++ys)   ==   product (x:xs) * product ys

    STRATEGY ReduceLHS

        product ((x:xs)++ys)
            = INDHYP l2r @ product
        product ((x:xs)) * product ys

    QED STEP

QED prods_mul
